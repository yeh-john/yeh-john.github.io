import"./style.css";import*as THREE from"three";import{OrbitControls}from"three/examples/jsm/controls/OrbitControls";const canvas=document.querySelector("#webgl"),sizes={width:window.innerWidth,height:window.innerHeight},scene=new THREE.Scene,camera=new THREE.PerspectiveCamera(75,sizes.width/sizes.height,.1,100),renderer=new THREE.WebGLRenderer({canvas});renderer.setSize(sizes.width,sizes.height),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2));const count=700,particlesGeometry=new THREE.BufferGeometry,positionArray=new Float32Array(2100);for(let e=0;e<2100;e++)positionArray[e]=15*(Math.random()-.5);particlesGeometry.setAttribute("position",new THREE.BufferAttribute(positionArray,3));const particlesMateiral=new THREE.PointsMaterial({size:.05,color:"#7df9ff"}),particles=new THREE.Points(particlesGeometry,particlesMateiral);scene.add(particles);const controls=new OrbitControls(camera,canvas);controls.enableDamping=!0,controls.enablePan=!1,controls.enableRotate=!1;const clock=new THREE.Clock,tick=()=>{const e=clock.getElapsedTime();camera.position.x=6*Math.cos(.5*e),camera.position.z=6*Math.sin(.5*e),controls.update(),renderer.render(scene,camera),window.requestAnimationFrame(tick)};tick(),window.addEventListener("resize",(()=>{sizes.width=window.innerWidth,sizes.height=window.innerHeight,camera.aspect=sizes.width/sizes.height,camera.updateProjectionMatrix(),renderer.setSize(sizes.width,sizes.height),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2))}));